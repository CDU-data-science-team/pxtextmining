Dummy model performance metrics: 
 {'accuracy': 0.21, 'balanced accuracy': 0.1, 'class balance accuracy': 0.1, 'matthews correlation': -0.02} 

Trained model performance metrics: 
 {'accuracy': 0.58, 'balanced accuracy': 0.49, 'class balance accuracy': 0.44, 'matthews correlation': 0.47} 

Best estimator: 
 SGDClassifier(class_weight='balanced', loss='log', max_iter=10000) 

Best parameters: 
 {'sampling__kw_args': {'up_balancing_counts': 800}, 'clf__estimator__penalty': 'l2', 'clf__estimator__max_iter': 10000, 'clf__estimator__loss': 'log', 'clf__estimator__class_weight': 'balanced', 'clf__estimator': SGDClassifier(class_weight='balanced', loss='log', max_iter=10000), 'alltrans__theme__scaler': OneHotEncoder(categories=[["Couldn't be improved", 'Access', 'Care received',
                           'Communication', 'Dignity',
                           'Environment/ facilities', 'Miscellaneous', 'Staff',
                           'Transition/coordination']]), 'alltrans__process__preprocessor__texttr__text__transformer__use_idf': False, 'alltrans__process__preprocessor__texttr__text__transformer__tokenizer': <pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7f2469dea9a0>, 'alltrans__process__preprocessor__texttr__text__transformer__norm': None, 'alltrans__process__preprocessor__texttr__text__transformer__ngram_range': (1, 2), 'alltrans__process__preprocessor__texttr__text__transformer__min_df': 1, 'alltrans__process__preprocessor__texttr__text__transformer__max_df': 0.85, 'alltrans__process__preprocessor__texttr__text__transformer': TfidfVectorizer(max_df=0.85, ngram_range=(1, 2), norm=None,
                tokenizer=<pxtextmining.helpers.tokenization.LemmaTokenizer object at 0x7f2469dea9a0>,
                use_idf=False), 'alltrans__process__preprocessor__sentimenttr__scaler__scaler__n_bins': 4, 'alltrans__process__preprocessor__sentimenttr__scaler__scaler': KBinsDiscretizer(n_bins=4, strategy='kmeans'), 'alltrans__process__preprocessor__lengthtr__scaler__scaler': KBinsDiscretizer(n_bins=3, strategy='kmeans'), 'alltrans__process__featsel__selector__score_func': <function chi2 at 0x7f24b923b8b0>, 'alltrans__process__featsel__selector__percentile': 90, 'alltrans__process__featsel__selector': SelectPercentile(percentile=90, score_func=<function chi2 at 0x7f24b923b8b0>)} 

